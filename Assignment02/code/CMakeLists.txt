CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

PROJECT(CG C CXX)

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_HOME_DIRECTORY}/cmake)
INCLUDE (CGCommon)
SET(EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR})
SET(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR})

IF(MSVC)
  ADD_DEFINITIONS(-DNOMINMAX)
  ADD_DEFINITIONS(-D_USE_MATH_DEFINES)
  ADD_DEFINITIONS(-DWIN32_LEAN_AND_MEAN)
  ADD_DEFINITIONS(-DVC_EXTRALEAN)
  ADD_DEFINITIONS(-DNODEFAULTLIB)
  ADD_DEFINITIONS(/FC)  #full path when using __FILE__
  ADD_DEFINITIONS(-D_VARIADIC_MAX=10)
ENDIF()

FIND_PACKAGE(OpenGL REQUIRED)

#build glew and glfw
OPTION(CG_USE_EXTERNAL_DEPENDENCIES "Use external GLEW and GLFW libraries" OFF)
SET(TOPOLOGY_MODULE_AVAILABLE false)
IF(CG_USE_EXTERNAL_DEPENDENCIES)
  FIND_PACKAGE(GLEW REQUIRED)
  FIND_PACKAGE(GLFW REQUIRED)
ELSE()
  ADD_SUBDIRECTORY(depend)
ENDIF()

IF(CMAKE_COMPILER_IS_GNUCXX) # Linux / MinGW / Cygwin
  ADD_DEFINITIONS(-std=c++11 -Wall)
ENDIF()
IF("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
  ADD_DEFINITIONS(-std=c++11 -Wall)
ENDIF()
FIND_PACKAGE(OpenMP)
IF(OPENMP_FOUND)
  MESSAGE(STATUS "Using OpenMP parallelization")
  SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
  SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
ELSE()
  MESSAGE(STATUS "Not using OpenMP parallelization")
ENDIF()

OPTION(CG_BUILD_DOCUMENTATION "Build CG documentation" OFF)
IF(CG_BUILD_DOCUMENTATION)
  IF (NOT DOXYGEN_FOUND)
    MESSAGE("Not building documentation because Doxygen is missing")
  ELSE()
    SET(DOXYGEN_LANGUAGE "English" CACHE STRING "Language used by doxygen")
    MARK_AS_ADVANCED(DOXYGEN_LANGUAGE)

    SET( DOXYGEN_SOURCE_DIR "${CMAKE_SOURCE_DIR}/exercises/raytracer")

    SET(DOXYGEN_OUTPUT_DIR ${CMAKE_CURRENT_BINARY_DIR}/Doxygen)

    STRING(REGEX REPLACE ";" " " CMAKE_DOXYGEN_INPUT_LIST "${DOXYGEN_SOURCE_DIR}")

    CONFIGURE_FILE(Doxyfile.in ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile.in)

    ADD_CUSTOM_TARGET(doc ALL ${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile.in
      DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile.in)
  ENDIF()
ENDIF()

INCLUDE_DIRECTORIES(${CMAKE_HOME_DIRECTORY}/exercises)
ADD_SUBDIRECTORY(exercises)
